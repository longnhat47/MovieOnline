{"ast":null,"code":"import BaseService from \"../base\";\nclass countryService extends BaseService {\n  get entity() {\n    return \"country\";\n  }\n  async getAll() {\n    try {\n      return await this.request().get(`${this.entity}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async get(id) {\n    try {\n      return await this.request().get(`${this.entity}/${id}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async create(data) {\n    try {\n      return await this.request().post(`${this.entity}/create`, data);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async update(data) {\n    try {\n      return await this.request().put(`${this.entity}/${data['id']}`, data);\n    } catch (e) {\n      return e.response;\n    }\n  }\n  async delete(id) {\n    try {\n      return await this.request().delete(`${this.entity}/${id}`);\n    } catch (e) {\n      return e.response;\n    }\n  }\n}\nexport default new countryService();","map":{"version":3,"names":["BaseService","countryService","entity","getAll","request","get","e","response","id","create","data","post","update","put","delete"],"sources":["/Users/nhat/Documents/nhatj/workspace/MovieOnline/movie-web/src/services/country/country.js"],"sourcesContent":["import BaseService from \"../base\";\n\nclass countryService extends BaseService {\n    get entity() {\n        return \"country\"\n    }\n\n    async getAll() {\n        try {\n            return await this.request().get(`${this.entity}`)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async get(id) {\n        try {\n            return await this.request().get(`${this.entity}/${id}`)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async create(data) {\n        try {\n            return await this.request().post(`${this.entity}/create`, data)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async update(data) {\n        try {\n            return await this.request().put(`${this.entity}/${data['id']}`, data)\n        } catch (e) {\n            return e.response\n        }\n    }\n\n    async delete(id) {\n        try {\n            return await this.request().delete(`${this.entity}/${id}`)\n        } catch (e) {\n            return e.response;\n        }\n    }\n\n}\n\nexport default new countryService();\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,SAAS;AAEjC,MAAMC,cAAc,SAASD,WAAW,CAAC;EACrC,IAAIE,MAAMA,CAAA,EAAG;IACT,OAAO,SAAS;EACpB;EAEA,MAAMC,MAAMA,CAAA,EAAG;IACX,IAAI;MACA,OAAO,MAAM,IAAI,CAACC,OAAO,EAAE,CAACC,GAAG,CAAE,GAAE,IAAI,CAACH,MAAO,EAAC,CAAC;IACrD,CAAC,CAAC,OAAOI,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMF,GAAGA,CAACG,EAAE,EAAE;IACV,IAAI;MACA,OAAO,MAAM,IAAI,CAACJ,OAAO,EAAE,CAACC,GAAG,CAAE,GAAE,IAAI,CAACH,MAAO,IAAGM,EAAG,EAAC,CAAC;IAC3D,CAAC,CAAC,OAAOF,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAME,MAAMA,CAACC,IAAI,EAAE;IACf,IAAI;MACA,OAAO,MAAM,IAAI,CAACN,OAAO,EAAE,CAACO,IAAI,CAAE,GAAE,IAAI,CAACT,MAAO,SAAQ,EAAEQ,IAAI,CAAC;IACnE,CAAC,CAAC,OAAOJ,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMK,MAAMA,CAACF,IAAI,EAAE;IACf,IAAI;MACA,OAAO,MAAM,IAAI,CAACN,OAAO,EAAE,CAACS,GAAG,CAAE,GAAE,IAAI,CAACX,MAAO,IAAGQ,IAAI,CAAC,IAAI,CAAE,EAAC,EAAEA,IAAI,CAAC;IACzE,CAAC,CAAC,OAAOJ,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;EAEA,MAAMO,MAAMA,CAACN,EAAE,EAAE;IACb,IAAI;MACA,OAAO,MAAM,IAAI,CAACJ,OAAO,EAAE,CAACU,MAAM,CAAE,GAAE,IAAI,CAACZ,MAAO,IAAGM,EAAG,EAAC,CAAC;IAC9D,CAAC,CAAC,OAAOF,CAAC,EAAE;MACR,OAAOA,CAAC,CAACC,QAAQ;IACrB;EACJ;AAEJ;AAEA,eAAe,IAAIN,cAAc,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}